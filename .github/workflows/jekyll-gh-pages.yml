# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy_Github_Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]


# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: check file
        run: git diff-tree --no-commit-id --name-only -r ${{ github.sha }}
      - name: check
        run: git log --pretty=format:"%h %s" ${{ github.sha }}
      - name: Get latest commit name
        run: echo "Latest commit file:" $(git show --name-only HEAD | tail -n 1)
        id: latest_commit
      - name: Set latest commit name environment variable
        run: echo "Committed files:" $(git show --pretty="" --name-only ${{ github.sha }})
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: 'Checkout source code'
        uses: actions/checkout@v3
        with:
           fetch-depth: 0
      - name: get changed files
        id: getfile
        run: |
          echo "::set-output name=files::$(git diff-tree --no-commit-id --name-only -r HEAD | xargs)"
      - name: echo output
        run: |
          echo ${{ steps.getfile.outputs.files }}

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1

        
#   # Deployment job
#   deploy:
#     environment:
#       name: github-pages
#       url: ${{ steps.deployment.outputs.page_url }}
#     runs-on: ubuntu-latest
#     needs: build
#     steps:
#       - name: Deploy to GitHub Pages
#         id: deployment
#         uses: actions/deploy-pages@v1
#       # Checkout the source code
#       - name: 'Checkout source code'
#         uses: actions/checkout@v3
#         with:
#            fetch-depth: 0
#       - name: get changed files
#         id: getfile
#         run: |
#           echo "::set-output name=files::$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | xargs)"
#       - name: echo output
#         run: |
#           echo ${{ steps.getfile.outputs.files }}
#       - name: Post to a Slack channel
#         id: slack
#         uses: slackapi/slack-github-action@v1.23.0
#         with:
#           channel-id: 'C04LH0JCLQ0'
#           slack-message: "A file named '$FILE_NAME' was committed or pushed to the repository.\nMobile Application Report Link: https://hasankfz.github.io/mobile-app-reports.github.io/${{steps.getfile.outputs.files}}" 
#         env:
#            SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

 




